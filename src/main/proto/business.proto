/************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                     *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.common";
option java_outer_classname = "ADempiereData";

import "base_data_type.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// Base URL
// /business-data/

package data;

// The greeting service definition.
service BusinessData {
	// Get a Entity
	rpc GetEntity(GetEntityRequest) returns (Entity) {
		option (google.api.http) = { get: "/business-data/entities/{id}" };
	}
	// Create Entity Request
	rpc CreateEntity(CreateEntityRequest) returns (Entity) {
		option (google.api.http) = {
			post: "/business-data/entities",
			body: "*"
		};
	}
	// Update Entity Request
	rpc UpdateEntity(UpdateEntityRequest) returns (Entity) {
		option (google.api.http) = {
			put: "/business-data/entities/{id}",
			body: "*"
		};
	}
	// Delete Entity Request
	rpc DeleteEntity(DeleteEntityRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = { delete: "/business-data/entities/{id}" };
	}
	// Delete Entity Request
	rpc DeleteEntitiesBatch(DeleteEntitiesBatchRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = { post: "/business-data/entities/batch-delete" };
	}
	//	List a Entities
	rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = { get: "/business-data/entities" };
	}
	//	Request a BusinessProcess / Report
	rpc RunBusinessProcess(RunBusinessProcessRequest) returns (ProcessLog) {
		option (google.api.http) = {
			post: "/business-data/process",
			body: "*"
		};
	}
}

//	User Interface
service UserInterface {
	// Get a Tab Entity
	rpc GetTabEntity(GetTabEntityRequest) returns (Entity) {
		option (google.api.http) = { get: "/user-interface/entities/{id}" };
	}
	// Create Tab Entity
	rpc CreateTabEntity(CreateTabEntityRequest) returns (Entity) {
		option (google.api.http) = {
			post: "/user-interface/entities",
			body: "*"
		};
	}
	// Update Tab Entity
	rpc UpdateTabEntity(UpdateTabEntityRequest) returns (Entity) {
		option (google.api.http) = {
			put: "/user-interface/entities/{id}",
			body: "*"
		};
	}
	//	List tab Entities
	rpc ListTabEntities(ListTabEntitiesRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = { get: "/user-interface/entities" };
	}
	//	Rollback Entity Request
	rpc RollbackEntity(RollbackEntityRequest) returns (Entity) {
		option (google.api.http) = {
			put: "/user-interface/entities/{id}/rollback",
			body: "*"
		};
	}
	// Run a Callout
	rpc RunCallout(RunCalloutRequest) returns (Callout) {
		option (google.api.http) = {
			post: "/user-interface/run-callout",
			body: "*"
		};
	}
	//	Request Translations List
	rpc ListTranslations(ListTranslationsRequest) returns (ListTranslationsResponse) {
		option (google.api.http) = { get: "/user-interface/translations" };
	}
	// Get Default Value
	rpc GetDefaultValue(GetDefaultValueRequest) returns (DefaultValue) {
		option (google.api.http) = { get: "/user-interface/default-value/{id}" };
	}
	// Get Lookup Item
	rpc GetLookupItem(GetLookupItemRequest) returns (LookupItem) {
		option (google.api.http) = { get: "/user-interface/lookups/{id}" };
	}
	// List Lookup Item
	rpc ListLookupItems(ListLookupItemsRequest) returns (ListLookupItemsResponse) {
		option (google.api.http) = { get: "/user-interface/lookups" };
	}
	//	Request Browser Data
	rpc ListBrowserItems(ListBrowserItemsRequest) returns (ListBrowserItemsResponse) {
		option (google.api.http) = { get: "/user-interface/browser-items" };
	}
	// Update Browser Entity
	rpc UpdateBrowserEntity(UpdateBrowserEntityRequest) returns (Entity) {
		option (google.api.http) = {
			put: "/user-interface/browser-items/{id}",
			body: "*"
		};
	}
	// Exists References on Record
	rpc ExistsReferences(ExistsReferencesRequest) returns (ExistsReferencesResponse) {
		option (google.api.http) = { get: "/user-interface/references/{record_id}/exists" };
	}
	// List a References
	rpc ListReferences(ListReferencesRequest) returns (ListReferencesResponse) {
		option (google.api.http) = { get: "/user-interface/references" };
	}
	// Get context Info
	rpc GetContextInfoValue(GetContextInfoValueRequest) returns (ContextInfoValue) {
		option (google.api.http) = { get: "/user-interface/context-info/{id}" };
	}
	// Get Private Access
	rpc GetPrivateAccess(GetPrivateAccessRequest) returns (PrivateAccess) {
		option (google.api.http) = { get: "/user-interface/private-access/{id}" };
	}
	// Create Private Access
	rpc LockPrivateAccess(LockPrivateAccessRequest) returns (PrivateAccess) {
		option (google.api.http) = {
			put: "/user-interface/private-access/{id}/lock",
			body: "*"
		};
	}
	// Change Private Access
	rpc UnlockPrivateAccess(UnlockPrivateAccessRequest) returns (PrivateAccess) {
		option (google.api.http) = {
			put: "/user-interface/private-access/{id}/unlock",
			body: "*"
		};
	}
	// Get Record Access
	rpc GetRecordAccess(GetRecordAccessRequest) returns (RecordAccess) {
		option (google.api.http) = { get: "/user-interface/record-access/{id}" };
	}
	// Set Record Access
	rpc SetRecordAccess(SetRecordAccessRequest) returns (RecordAccess) {
		option (google.api.http) = {
			put: "/user-interface/record-access/{id}",
			body: "*"
		};
	}
	//	Request Print Format List
	rpc ListPrintFormats(ListPrintFormatsRequest) returns (ListPrintFormatsResponse) {
		option (google.api.http) = { get: "/user-interface/print-formats" };
	}
	//	Request Report View List
	rpc ListReportViews(ListReportViewsRequest) returns (ListReportViewsResponse) {
		option (google.api.http) = { get: "/user-interface/report-views" };
	}
	//	Request Drill Tables List
	rpc ListDrillTables(ListDrillTablesRequest) returns (ListDrillTablesResponse) {
		option (google.api.http) = { get: "/user-interface/drill-tables" };
	}
	//	Request Report Output
	rpc GetReportOutput(GetReportOutputRequest) returns (ReportOutput) {
		option (google.api.http) = { get: "/user-interface/report-output/{process_id}" };
	}
	// Add Chat Entry
	rpc CreateChatEntry(CreateChatEntryRequest) returns (ChatEntry) {
		option (google.api.http) = {
			post: "/user-interface/chat-entry",
			body: "*"
		};
	}
	//	Set Preference from field
	rpc SetPreference(SetPreferenceRequest) returns (Preference) {
		option (google.api.http) = {
			post: "/user-interface/preference",
			body: "*"
		};
	}
	//	Delete Preference from field
	rpc DeletePreference(DeletePreferenceRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = { delete: "/user-interface/preference/{id}" };
	}
	//	List General Info
	rpc ListGeneralInfo(ListGeneralInfoRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = { get: "/user-interface/general-info" };
	}
	//	List Tab Sequences
	rpc ListTabSequences(ListTabSequencesRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = { get: "/user-interface/tab-sequences" };
	}
	//	Save Tab Sequences
	rpc SaveTabSequences(SaveTabSequencesRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = {
			post: "/user-interface/tab-sequences",
			body: "*"
		};
	}
	// List Tree Nodes Request
	rpc ListTreeNodes(ListTreeNodesRequest) returns (ListTreeNodesResponse) {
		option (google.api.http) = { get: "/user-interface/tree-nodes" };
	}
	// List Mail Templates
	rpc ListMailTemplates(ListMailTemplatesRequest) returns (ListMailTemplatesResponse) {
		option (google.api.http) = { get: "/user-interface/mail-templates" };
	}
}

// Translations Item
message Translation {
	string language = 1;
	google.protobuf.Struct values = 2;
}

//	Role Access Request
message GetRecordAccessRequest {
	string table_name = 1;
	int32 id = 2;
}

//	Set Access Request
message SetRecordAccessRequest {
	string table_name = 1;
	int32 id = 2;
	repeated RecordAccessRole record_accesses = 3;
}

//	Record Access Definition
message RecordAccess {
	string table_name = 1;
	int32 id = 2;
	repeated RecordAccessRole available_roles = 3;
	repeated RecordAccessRole current_roles = 4;
}

//	Record Access Stub
message RecordAccessRole {
	int32 role_id = 1;
	string role_name = 2;
	bool is_active = 3;
	bool is_exclude = 4;
	bool is_read_only = 5;
	bool is_dependent_entities = 6;
}

// Request for set preference
message SetPreferenceRequest {
	int32 container_id = 1;
	string column_name = 2;
	bool is_for_current_user = 3;
	bool is_for_current_client = 4;
	bool is_for_current_organization = 5;
	bool is_for_current_container = 6;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 7;
	string value = 8;
}

// Request for delete preference
message DeletePreferenceRequest {
	int32 container_id = 1;
	string column_name = 2;
	bool is_for_current_user = 3;
	bool is_for_current_client = 4;
	bool is_for_current_organization = 5;
	bool is_for_current_container = 6;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 7;
}

// Preference from window
message Preference {
	int32 container_id = 1;
	string column_name = 2;
	string value = 3;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 4;
	int32 user_id = 5;
	int32 client_id = 6;
	int32 organization_id = 7;
}

// Get Entity Request
message GetReportOutputRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 process_id = 8;
	int32 print_format_id = 9;
	int32 report_view_id = 10;
	bool is_summary = 11;
	string report_name = 12;
	string report_type = 13;
	string table_name = 14;
}

// Create Entity Request
message CreateEntityRequest {
	string table_name = 1;
	google.protobuf.Struct attributes = 2;
}

// Create Private Access Request
message LockPrivateAccessRequest {
	string table_name = 1;
	int32 id = 2;
}

// Get Entity Request
message GetEntityRequest {
	int32 id = 1;
	string table_name = 2;
	//	Filters
	string filters = 3;
	string sort_by = 4;
	repeated string group_columns = 5;
	repeated string select_columns = 6;
	int32 page_size = 7;
	string page_token = 8;
}

// Get Private Access Request
message GetPrivateAccessRequest {
	string table_name = 1;
	int32 id = 2;
}

// Delete Private Access Request
message UnlockPrivateAccessRequest {
	string table_name = 1;
	int32 id = 2;
}

// Private Access Object
message PrivateAccess {
	string table_name = 1;
	int32 id = 2;
	bool is_locked = 3;
}

//  Empty message
message RollbackEntityRequest {
	string table_name = 1;
	int32 id = 2;
	int32 log_id = 3;
}

// Update Entity Request
message UpdateEntityRequest {
	string table_name = 1;
	int32 id = 2;
	google.protobuf.Struct attributes = 3;
}

// Delete Entity Request
message DeleteEntityRequest {
	string table_name = 1;
	int32 id = 2;
}

// Delete Batch Entity Request
message DeleteEntitiesBatchRequest {
	string table_name = 1;
	repeated int32 ids = 2;
}

// Browser request
message ListBrowserItemsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 id = 8;
	google.protobuf.Struct context_attributes = 9;
}

// Browsers List
message ListBrowserItemsResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// Update Browser Entity Request
message UpdateBrowserEntityRequest {
	int32 id = 1;
	int32 record_id = 2;
	google.protobuf.Struct attributes = 3;
}

// Context Info Value
message ContextInfoValue {
	string message_text = 1;
	string message_tip = 2;
}

// Get Lookup Item
message GetLookupItemRequest {
	int32 id = 1;
	int32 process_parameter_id = 2;
	int32 field_id = 3;
	int32 browse_field_id = 4;
	int32 reference_id = 5;
	int32 column_id = 6;
	string column_name = 7;
	string table_name = 8;
	google.protobuf.Struct context_attributes = 9;
}

// Get Default Value Request
message GetDefaultValueRequest {
	// References
	int32 process_parameter_id = 1;
	int32 field_id = 2;
	int32 browse_field_id = 3;
	int32 column_id = 4;
	google.protobuf.Struct context_attributes = 5;
	google.protobuf.Value value = 6;
}

// Default Value Response
message DefaultValue {
	int32 id = 1;
	google.protobuf.Struct values = 2;
}

// Get Lookup Item
message GetContextInfoValueRequest {
	int32 id = 1;
	// Query
	string query = 2;
}

// Lookup Item Response
message LookupItem {
	int32 id = 1;
	string table_name = 2;
	google.protobuf.Struct values = 3;
}

// List Lookup Item
message ListLookupItemsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	// References
	int32 process_parameter_id = 8;
	int32 field_id = 9;
	int32 browse_field_id = 10;
	int32 reference_id = 11;
	int32 column_id = 12;
	string column_name = 13;
	string table_name = 14;
	google.protobuf.Struct context_attributes = 15;
}

// List Lookup Item Response
message ListLookupItemsResponse {
	int64 record_count = 1;
	repeated LookupItem records = 2;
	string next_page_token = 3;
}

// Get Tab Entity Request
message GetTabEntityRequest {
	int32 id = 1;
	int32 window_id = 2;
	int32 tab_id = 3;
	google.protobuf.Struct context_attributes = 4;
}

// Create Tab Entity Request
message CreateTabEntityRequest {
	int32 id = 1;
	int32 window_id = 2;
	int32 tab_id = 3;
	google.protobuf.Struct attributes = 4;
}

// Update Tab Entity Request
message UpdateTabEntityRequest {
	int32 id = 1;
	int32 window_id = 2;
	int32 tab_id = 3;
	google.protobuf.Struct attributes = 4;
}

// List Tab Entities Request
message ListTabEntitiesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 window_id = 8;
	int32 tab_id = 9;
	google.protobuf.Struct context_attributes = 10;
}

// @deprecated please use ListEntitiesResponse
// List Entities Response
message ListTabEntitiesResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// List Entities Request
message ListEntitiesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
}

// List Entities Response
message ListEntitiesResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// Callout Request
message RunCalloutRequest {
	string table_name = 1;
	int32 window_id = 2;
	int32 tab_id = 3;
	string callout = 4;
	string column_name = 5;
	google.protobuf.Value old_value = 6;
	google.protobuf.Value value = 7;
	int32 window_no = 8;
	google.protobuf.Struct context_attributes = 9;
}

// Callout response with data from server
message Callout {
	string result = 1;
	google.protobuf.Struct values = 2;
}

//	Entities Selections
message KeyValueSelection {
	int32 selection_id = 1;
	google.protobuf.Struct values = 2;
}

// BusinessProcess Request
message RunBusinessProcessRequest {
	int32 id = 1;
	string table_name = 2;
	int32 record_id = 3;
	int32 table_selected_id = 4;
	string report_type = 5;
	int32 print_format_id = 6;
	int32 report_view_id = 7;
	bool is_summary = 8;
	google.protobuf.Struct parameters = 9;
	repeated KeyValueSelection selections = 10;
}

// Translations Request
message ListTranslationsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 id = 8;
	string table_name = 9;
	string language = 10;
}

//	Translations List
message ListTranslationsResponse {
	int64 record_count = 1;
	repeated Translation translations = 2;
	string next_page_token = 3;
}

// Print Formats Request
message ListPrintFormatsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
	int32 report_view_id = 9;
	int32 process_id = 10;
}

//	Print Format List
message ListPrintFormatsResponse {
	int64 record_count = 1;
	repeated PrintFormat print_formats = 2;
	string next_page_token = 3;
}

// Create Chat Entry Request
message CreateChatEntryRequest {
	string table_name = 1;
	int32 id = 2;
	string comment = 3;
}

// Record Chat
message ChatEntry {
	int32 chat_id = 1;
	int32 id = 2;
	string subject = 3;
	string character_data = 4;
	int32 user_id = 5;
	string user_name = 6;
	enum ConfidentialType {
		PUBLIC = 0;
		PARTER = 1;
		INTERNAL = 2;
	}
	enum ModeratorStatus {
		NOT_DISPLAYED = 0;
		PUBLISHED = 1;
		SUSPICIUS = 2;
		TO_BE_REVIEWED = 3;
	}
	enum ChatEntryType {
		NOTE_FLAT = 0;
		FORUM_THREADED = 1;
		WIKI = 2;
	}
	ChatEntryType chat_entry_type = 7;
	ConfidentialType confidential_type = 8;
	ModeratorStatus moderator_status = 9;
	google.protobuf.Timestamp log_date = 10;
}

// Report _views Request
message ListReportViewsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
	int32 process_id = 9;
}

// Print Format
message PrintFormat {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string table_name = 4;
	bool is_default = 5;
	int32 report_view_id = 6;
}


// Report View
message ReportView {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string table_name = 4;
}

// Drill Table
message DrillTable {
	string table_name = 1;
	string print_name = 2;
}

//	Report View List
message ListReportViewsResponse {
	int64 record_count = 1;
	repeated ReportView report_views = 2;
	string next_page_token = 3;
}

// Drill table Request
message ListDrillTablesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
}

//	Drill Tables List
message ListDrillTablesResponse {
	int64 record_count = 1;
	repeated DrillTable drill_tables = 2;
	string next_page_token = 3;
}

// Exists References Request
message ExistsReferencesRequest {
	int32 tab_id = 1;
	int32 record_id = 2;
}

// References Count
message ExistsReferencesResponse {
	int32 record_count = 1;
}

// List References
message ListReferencesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 id = 8;
	string table_name = 9;
	int32 window_id = 10;
}

// Zoom Information
message RecordReferenceInfo {
	int32 id = 1;
	int32 window_id = 2;
	int32 tab_id = 3;
	string table_name = 4;
	string where_clause = 5;
	int64 record_count = 6;
	string column_name = 7;
	string display_name = 8;
	google.protobuf.Value value = 9;
}

// List References Response
message ListReferencesResponse {
	int64 record_count = 1;
	repeated RecordReferenceInfo references = 2;
	string next_page_token = 3;
}

// List General Info Request
message ListGeneralInfoRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	google.protobuf.Struct context_attributes = 8;
	// references
	int32 process_parameter_id = 9;
	int32 field_id = 10;
	int32 browse_field_id = 11;
	int32 reference_id = 12;
	int32 column_id = 13;
	string table_name = 14;
	string column_name = 15;
}

message ListTabSequencesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 window_id = 8;
	int32 tab_id = 9;
	google.protobuf.Struct context_attributes = 10;
}

message SaveTabSequencesRequest {
	int32 tab_id = 1;
	google.protobuf.Struct context_attributes = 2;
	repeated KeyValueSelection entities = 3;
}


// List Tree Nodes Request
message ListTreeNodesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 tab_id = 8;
	string table_name = 9;
	int32 id = 10;
	int32 element_id = 11;
	google.protobuf.Struct context_attributes = 12;
}

// Tree Node
message TreeNode {
	int32 id = 1;
	int32 parent_id = 2;
	int32 record_id = 3;
	string name = 4;
	string description = 5;
	string sequence = 6;
	bool is_summary = 7;
	bool is_active = 8;
	repeated TreeNode childs = 9;
}

message TreeType {
	int32 id = 1;
	string value = 2;
	string name = 3;
	string description = 4;
}

// List Tree Nodes Response
message ListTreeNodesResponse {
	int64 record_count = 1;
	repeated TreeNode records = 2;
	string next_page_token = 3;
	TreeType tree_type = 4;
}

message MailTemplate {
	int32 id = 1;
	string name = 2;
	string subject = 3;
	string mail_text = 4;
}

message ListMailTemplatesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListMailTemplatesResponse {
	int64 record_count = 1;
	repeated MailTemplate records = 2;
	string next_page_token = 3;
}
