# This workflow will build a Java project with Gradle
# This file was contributed by EdwinBetanc0urt@outlook.com from ERP Consultores y Asociados, C.A
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish Project

on:
  release:
    types:
      - created

jobs:

  # Build dist application backend
  build-app:
    name: Build dist backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Java JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: 11
          architecture: x64
      
      - name: get adempiere source
        run: |
          download_repo="https://github.com/erpcya/adempiere/releases/download/3.9.3-rs-4.3/Adempiere_393LTS.tar.gz"
          wget $download_repo -c -O Adempiere.tar.gz

      - name: uncompress file
        run: tar -xzf Adempiere.tar.gz
      - name: create dependences folder
        run: mkdir dependences
      - name: move dependences
        run: mv Adempiere/lib/*.jar dependences/
      - name: move packages
        run: mv Adempiere/packages/*/lib/*.jar dependences/
        
      - name: Build with Gradle
        run: gradle createRelease

      - name: Upload dist app zip artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend.zip
          path: build/release/backend.zip

      - name: Upload dist app zip.MD5 artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend.zip.MD5
          path: build/release/backend.zip.MD5

      - name: Upload dist app tar artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend.tar
          path: build/release/backend.tar

      - name: Upload dist app tar.MD5 artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend.tar.MD5
          path: build/release/backend.tar.MD5


  publish-binaries:
    name: Upload Binaries backend
    needs: build-app
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Upload zip
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: backend.zip/backend.zip

      - name: Upload zip.MD5
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: backend.zip.MD5/backend.zip.MD5

      - name: Upload tar
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: backend.tar/backend.tar

      - name: Upload tar.MD5
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: backend.tar.MD5/backend.tar.MD5


  # Publish docker image in Docker Hub registry to application
  push-imame-dhr:
    name: Push Docker image to Docker Hub
    needs:
      - build-app
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: backend.zip
          path: dist

      - name: Unzip dist file
        run: |
          cd dist
          unzip -o backend.zip

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push image in Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./build-docker/Dockerfile.prod
          push: true
          tags: |
            ${{ secrets.DOCKER_REPO_BACKEND }}:latest
            ${{ secrets.DOCKER_REPO_BACKEND }}:${{ github.event.release.tag_name }}
          build-args: |
            JDK_RELEASE=11-jdk
            
            
      # Setting Dockerfile for Alpine Image      
      - name: Set Alpine Dockerfile 
        run: |
          cp build-docker/Dockerfile.prod build-docker/Dockerfile.alpine
          sed -i "s|RUN|RUN $(cat build-docker/alpine-adds-on.txt)|g" build-docker/Dockerfile.alpine

      #Build Alpine Adempiere Based Tomcat Image
      - name: Build and push Alpine Docker image for Adempiere Backend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build-docker/Dockerfile.alpine
          push: true
          tags: | 
            ${{ secrets.DOCKER_REPO_BACKEND }}:alpine-${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_REPO_BACKEND }}:alpine
          build-args: |
            JDK_RELEASE=11-jdk-alpine